language: cpp

matrix:
  include:
    # code coverage:
    - os: linux
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-7
          - libfftw3-dev
          - libgsl0-dev
          - libncurses-dev
          - lcov
      env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7 && COVERAGE=ON"
    - os: linux
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-7
          - libfftw3-dev
          - libgsl0-dev
          - libncurses-dev
      env:
      - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - os: linux
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-5.0
          packages:
          - clang-5.0
          - libfftw3-dev
          - libgsl0-dev
          - libncurses-dev
      env:
      - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
    - os: osx
      osx_image: xcode10
      compiler: clang

before_install:
- eval "${MATRIX_EVAL}"
#- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gsl; fi
- |
  if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
    wget "http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -O miniconda.sh;
    bash miniconda.sh -b -p $HOME/miniconda
    export PATH="$HOME/miniconda/bin:$PATH"
    hash -r
    conda update -yq conda
    conda install -y cmake gsl fftw -c conda-forge
  fi

script:
# Build
- mkdir $TRAVIS_BUILD_DIR/build
- cd $TRAVIS_BUILD_DIR/build
- cmake -DCOVERAGE=$COVERAGE ..
- make -j2
- if [[ "$COVERAGE" == "ON" ]]; then gem install coveralls-lcov; fi
# base line coverage
- if [[ "$COVERAGE" == "ON" ]]; then lcov -c -i -d $TRAVIS_BUILD_DIR -o baseline.info; fi
# Testing
- |
  cd $TRAVIS_BUILD_DIR/test
  $TRAVIS_BUILD_DIR/build/test/io_array
  $TRAVIS_BUILD_DIR/build/test/parameter_input_file
  cd -

after_success:
- |
  if [[ "${COVERAGE}" == "ON" ]]; then
    cd ${TRAVIS_BUILD_DIR}
    lcov --directory . --capture --output-file coverage.info # capture coverage info
    lcov -a baseline.info -a coverage.info -o coverage.info
    lcov --remove coverage.info 'test/*' '/usr/*' 'miniconda/*' --output-file coverage.info # filter out system and test code and external includes
    lcov --list coverage.info # debug before upload
    coveralls-lcov coverage.info # uploads to coveralls
  fi